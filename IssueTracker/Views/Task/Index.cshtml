@using Newtonsoft.Json
@model IssueTracker.Models.IssueDetail
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Ragunaathan Pandurangan",
        Value = "1",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Dinesh Muralitharan",
        Value = "2",
        Selected = true
    });

    listItems.Add(new SelectListItem
    {
        Text = "Mani Chandran",
        Value = "3",
        Selected = true
    });

    listItems.Add(new SelectListItem
    {
        Text = "Mohanraj Periyannan",
        Value = "4",
        Selected = true
    });

    listItems.Add(new SelectListItem
    {
        Text = "Suvetha Paramashivam",
        Value = "5",
        Selected = true
    });

    listItems.Add(new SelectListItem
    {
        Text = "Saravanan B",
        Value = "6",
        Selected = true
    });

}
@{
    List<SelectListItem> Components = new List<SelectListItem>();
    Components.Add(new SelectListItem
    {
        Text = "Account",
        Value = "6",
        Selected = true
    });

    Components.Add(new SelectListItem
    {
        Text = "Sales",
        Value = "6",
        Selected = true
    });

    Components.Add(new SelectListItem
    {
        Text = "Direct-Trac",
        Value = "6",
        Selected = true
    });

    Components.Add(new SelectListItem
    {
        Text = "Assembly Manager",
        Value = "6",
        Selected = true
    });

    Components.Add(new SelectListItem
    {
        Text = "Big Data",
        Value = "6",
        Selected = true
    });

    Components.Add(new SelectListItem
    {
        Text = "Dashboard",
        Value = "6",
        Selected = true
    });

    Components.Add(new SelectListItem
    {
        Text = "Final Builder",
        Value = "6",
        Selected = true
    });
}

@{
    List<SelectListItem> IssueType = new List<SelectListItem>();
    IssueType.Add(new SelectListItem
    {
        Text = "Story",
        Value = "1",
        Selected = true
    });
    IssueType.Add(new SelectListItem
    {
        Text = "Bug",
        Value = "2",
        Selected = true
    });
    IssueType.Add(new SelectListItem
    {
        Text = "Epic",
        Value = "3",
        Selected = true
    });
}


@{
    List<SelectListItem> Priorityy = new List<SelectListItem>();
    Priorityy.Add(new SelectListItem
    {
        Text = "Low",
        Value = "1",
        Selected = true
    });
    Priorityy.Add(new SelectListItem
    {
        Text = "Normal",
        Value = "2",
        Selected = true

    });
    Priorityy.Add(new SelectListItem
    {
        Text = "High",
        Value = "3",
        Selected = true
    }); Priorityy.Add(new SelectListItem
    {
        Text = "Critical",
        Value = "4",
        Selected = true
    }); Priorityy.Add(new SelectListItem
    {
        Text = "Ultra Critical",
        Value = "5",
        Selected = true
    }); Priorityy.Add(new SelectListItem
    {
        Text = "Release-Breaker",
        Value = "6",
        Selected = true
    });
}

@section StyleSection
{
    <link href="~/Styles/Task/Task_Style.css" rel="stylesheet" />

    <link rel="stylesheet" href="http://cdn.syncfusion.com/16.4.0.42/js/web/flat-azure/ej.web.all.min.css" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link href="~/Styles/Task/Project.css" rel="stylesheet" />
}

@section ScriptSection{

    <!-- Essential Studio for JavaScript  script references -->
    <script src="http://cdn.syncfusion.com/js/assets/external/jquery.easing.1.3.min.js"> </script>
    <script src="http://cdn.syncfusion.com/js/assets/external/jquery.globalize.min.js"></script>
    <script src="http://cdn.syncfusion.com/16.4.0.42/js/web/ej.web.all.min.js"> </script>

    <script>
    $(function() {
        var data = @Html.Raw(JsonConvert.SerializeObject(ViewBag.AgileBoardListResult));
        data = ej.DataManager(data);

        $("#IssueDetailsGrid")
           .ejGrid({
               dataSource: data,
               allowPaging: true,
               pageSettings: { pageSize: 15 },
               allowSelection: false,
               allowSorting: true,
               contextMenuSettings: { enableContextMenu: false },
               allowFiltering: true,
               filterSettings: { filterType: "excel" },
               allowResizing: true,
               allowEditing: false,
               allowScrolling: false,
               enableTouch: false,
               enableAltRow: true,
               load:window.GridToolTipBehavior,


               columns: [
        { field: "TaskId", isPrimaryKey: true, headerText: "TaskId", textAlign: ej.TextAlign.Left, visible: false },
        { field: "TaskIdName", headerText: "TaskIdName", textAlign: ej.TextAlign.Center,width: 100},
        { field: "Title", headerText: "Title", textAlign: ej.TextAlign.Center, width: 300},

{ field: "PriorityName", headerText: "PriorityName", textAlign: ej.TextAlign.Center,width: 100 },
{ field: "ProjectStatus", headerText: "ProjectStatus", textAlign: ej.TextAlign.Center },
{ field: "ComponentsName", headerText: "ComponentsName", textAlign: ej.TextAlign.Center },
{ field: "DueDate", headerText: "DueDate", textAlign: ej.TextAlign.Center }
               ],
           });
    });
    </script>

}

@section MainSection
{<h3 id="heading" style="text-align: left ">Task List</h3>
    <div class="container">
        
            <button type="button" class="btn btn-success" id="btn-add" data-toggle="modal" data-target="#AddProject" style="margin-left:85%;">Crate Task</button>


            <div class="modal fade" id="AddProject" role="dialog">
                <div class="modal-dialog modal-lg" style="left:10px;">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Create Task <button type="button" class="close" data-dismiss="modal">&times;</button></h4>

                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm())
                            {


                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ComponentId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.ComponentId, Components, new { @class = "form-control", id = "ComponentId" })
                                            @Html.ValidationMessageFor(model => model.ComponentId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.IssueTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.IssueTypeId, IssueType, new { @class = "form-control", id = "IssueTypeId" })
                                            @Html.ValidationMessageFor(model => model.IssueTypeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.PriorityId, Priorityy, new { @class = "form-control", id = "ComponentId" })
                                            @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.StatusId, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EngineerId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.EngineerId, listItems, "Select ProjectLeader", new { @class = "form-control", id = "EngineerId" })
                                            @Html.ValidationMessageFor(model => model.EngineerId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AssigneeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.AssigneeId, listItems, new { @class = "form-control", id = "AssigneeId" })
                                            @Html.ValidationMessageFor(model => model.AssigneeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ReportingPersionId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.ReportingPersionId, listItems, new { @class = "form-control", id = "ReportingPersionId" })
                                            @Html.ValidationMessageFor(model => model.ReportingPersionId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StoryPoints, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.StoryPoints, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.StoryPoints, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @type = "date", @class = "form-control datepicker" } })
                                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" id="SubmitProject">
                                        <button type="submit" class="btn btn-success" id="btn-create" style="margin-left: 35%;">Create</button>
                                        <button type="button" class="btn btn-default" id="btn-close" data-dismiss="modal" style="margin-left: 40px;">Close</button>

                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                </div>
                            <div id="grid">
                                <br />
                                <div id="IssueDetailsGrid">
                                </div>

                            </div>
                        </div>
}


